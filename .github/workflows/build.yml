name: Build Matrix

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Explicitly list only what you want to build
          - { version: "1.6.31", python_version: "3.10" }
          - { version: "1.6.31", python_version: "3.11" }
          - { version: "1.6.31", python_version: "3.12" }
          - { version: "1.6.32", python_version: "3.10" }
          - { version: "1.6.32", python_version: "3.11" }
          - { version: "1.6.32", python_version: "3.12" }
          - { version: "2.4.17", python_version: "3.10" }
          - { version: "2.4.17", python_version: "3.11" }
          - { version: "2.4.17", python_version: "3.12" }
          - { version: "2.4.18", python_version: "3.10" }
          - { version: "2.4.18", python_version: "3.11" }
          - { version: "2.4.18", python_version: "3.12" }
          - { version: "2.4.19", python_version: "3.10" }
          - { version: "2.4.19", python_version: "3.11" }
          - { version: "2.4.19", python_version: "3.12" }
          - { version: "stable",  python_version: "default" }
          - { version: "latest",  python_version: "default" }
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v5
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: bsmeding/nautobot

      - name: Setup Build Info
        id: setup
        shell: bash
        run: |
          NAUTOBOT_VER="${{ matrix.version }}"
          PYV="${{ matrix.python_version }}"
          if [[ "$PYV" == "default" ]]; then
            PYTHON_VER="3.12"  # your default
            base_tag="bsmeding/nautobot:${NAUTOBOT_VER}"
            py_suffix=""       # no py suffix for default builds
          else
            PYTHON_VER="$PYV"
            base_tag="bsmeding/nautobot:${NAUTOBOT_VER}-py${PYTHON_VER}"
            py_suffix="-py${PYTHON_VER}"
          fi

          TAGS=("$base_tag")

          # If NAUTOBOT_VER is a full patch like X.Y.Z, also add floating X.Y tags
          if [[ "$NAUTOBOT_VER" =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            minor="${BASH_REMATCH[1]}.${BASH_REMATCH[2]}"
            TAGS+=("bsmeding/nautobot:${minor}${py_suffix}")
          fi

          # Optional: if NAUTOBOT_VER is just "stable"/"latest", keep as-is (already covered)

          # Write ENV
          printf "PYTHON_VER=%s\n" "$PYTHON_VER" >> $GITHUB_ENV
          printf "NAUTOBOT_VER=%s\n" "$NAUTOBOT_VER" >> $GITHUB_ENV

          # Join tags with newlines for docker/build-push-action
          printf "TAGS<<EOF\n" >> $GITHUB_ENV
          printf "%s\n" "${TAGS[@]}" >> $GITHUB_ENV
          printf "EOF\n" >> $GITHUB_ENV

      - name: Debug Info
        run: |
          echo "Nautobot version: ${{ matrix.version }}"
          echo "Python version: $PYTHON_VER"
          echo "Tags: $TAGS"
  
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          no-cache: true
          build-args: |
            NAUTOBOT_VER=${{ env.NAUTOBOT_VER }}
            PYTHON_VER=${{ env.PYTHON_VER }}
          tags: ${{ env.TAGS }}